{
  "NServiceBus.MessageId": "94f5d55d-6af8-4a12-862e-b0a2012af7a7",
  "NServiceBus.MessageIntent": "Publish",
  "NServiceBus.RelatedTo": "6dc5e391-f171-4bd8-9777-b0a2012af72f",
  "NServiceBus.ConversationId": "f92252e4-b739-4fff-92ae-b0a2012af739",
  "NServiceBus.CorrelationId": "6dc5e391-f171-4bd8-9777-b0a2012af72f",
  "NServiceBus.ReplyToAddress": "Sales",
  "NServiceBus.OriginatingMachine": "NOI-RDWIVEDI01",
  "NServiceBus.OriginatingEndpoint": "Sales",
  "$.diagnostics.originating.hostid": "f29e716d08dce90d5e1f61198f8f8041",
  "NServiceBus.ContentType": "text\/xml",
  "NServiceBus.EnclosedMessageTypes": "Messages.OrderPlaced, Messages, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null",
  "NServiceBus.Version": "8.1.4",
  "NServiceBus.TimeSent": "2023-10-21 18:08:30:471028 Z",
  "NServiceBus.ProcessingMachine": "NOI-RDWIVEDI01",
  "NServiceBus.Retries.Timestamp": "2023-10-21 18:09:05:365849 Z",
  "NServiceBus.DeliverAt": "2023-10-21 18:08:41:344626 Z",
  "NServiceBus.ProcessingEndpoint": "Billing",
  "$.diagnostics.hostid": "1d3c7f2cb6e3c49afa8879d7120889f2",
  "$.diagnostics.hostdisplayname": "NOI-RDWIVEDI01",
  "NServiceBus.FailedQ": "Billing",
  "NServiceBus.ExceptionInfo.ExceptionType": "System.Exception",
  "NServiceBus.ExceptionInfo.HelpLink": null,
  "NServiceBus.ExceptionInfo.Message": "Could not find metadata for 'Messages.OrderBilled'.\r\nEnsure the following:\r\n1. 'Messages.OrderBilled' is included in initial scanning. \r\n2. 'Messages.OrderBilled' implements either 'IMessage', 'IEvent' or 'ICommand' or alternatively, if you don't want to implement an interface, you can use 'Unobtrusive Mode'.",
  "NServiceBus.ExceptionInfo.Source": "NServiceBus.Core",
  "NServiceBus.ExceptionInfo.StackTrace": "System.Exception: Could not find metadata for 'Messages.OrderBilled'.\r\nEnsure the following:\r\n1. 'Messages.OrderBilled' is included in initial scanning. \r\n2. 'Messages.OrderBilled' implements either 'IMessage', 'IEvent' or 'ICommand' or alternatively, if you don't want to implement an interface, you can use 'Unobtrusive Mode'.\r\n   at NServiceBus.Unicast.Messages.MessageMetadataRegistry.GetMessageMetadata(Type messageType) in \/_\/src\/NServiceBus.Core\/Unicast\/Messages\/MessageMetadataRegistry.cs:line 48\r\n   at NServiceBus.SerializeMessageConnector.Invoke(IOutgoingLogicalMessageContext context, Func`2 stage) in \/_\/src\/NServiceBus.Core\/Pipeline\/Outgoing\/SerializeMessageConnector.cs:line 35\r\n   at NServiceBus.MessageOperations.Publish(IBehaviorContext context, Type messageType, Object message, PublishOptions options) in \/_\/src\/NServiceBus.Core\/Unicast\/MessageOperations.cs:line 70\r\n   at Billing.OrderPlacedHandler.NServiceBus.IHandleMessages<Messages.OrderPlaced>.Handle(OrderPlaced message, IMessageHandlerContext context) in E:\\RetailSystem\\Billing\\OrderPlacedHandler.cs:line 19\r\n   at NServiceBus.InvokeHandlerTerminator.Terminate(IInvokeHandlerContext context) in \/_\/src\/NServiceBus.Core\/Pipeline\/Incoming\/InvokeHandlerTerminator.cs:line 33\r\n   at NServiceBus.LoadHandlersConnector.Invoke(IIncomingLogicalMessageContext context, Func`2 stage) in \/_\/src\/NServiceBus.Core\/Pipeline\/Incoming\/LoadHandlersConnector.cs:line 40\r\n   at NServiceBus.DeserializeMessageConnector.Invoke(IIncomingPhysicalMessageContext context, Func`2 stage) in \/_\/src\/NServiceBus.Core\/Pipeline\/Incoming\/DeserializeMessageConnector.cs:line 32\r\n   at NServiceBus.ProcessingStatisticsBehavior.Invoke(IIncomingPhysicalMessageContext context, Func`2 next) in \/_\/src\/NServiceBus.Core\/Performance\/Statistics\/ProcessingStatisticsBehavior.cs:line 25\r\n   at NServiceBus.TransportReceiveToPhysicalMessageConnector.Invoke(ITransportReceiveContext context, Func`2 next) in \/_\/src\/NServiceBus.Core\/Pipeline\/Incoming\/TransportReceiveToPhysicalMessageConnector.cs:line 35\r\n   at NServiceBus.RetryAcknowledgementBehavior.Invoke(ITransportReceiveContext context, Func`2 next) in \/_\/src\/NServiceBus.Core\/ServicePlatform\/Retries\/RetryAcknowledgementBehavior.cs:line 25\r\n   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext, CancellationToken cancellationToken) in \/_\/src\/NServiceBus.Core\/Pipeline\/MainPipelineExecutor.cs:line 49\r\n   at NServiceBus.MainPipelineExecutor.Invoke(MessageContext messageContext, CancellationToken cancellationToken) in \/_\/src\/NServiceBus.Core\/Pipeline\/MainPipelineExecutor.cs:line 68\r\n   at NServiceBus.LearningTransportMessagePump.ProcessFile(ILearningTransportTransaction transaction, String messageId, CancellationToken messageProcessingCancellationToken) in \/_\/src\/NServiceBus.Core\/Transports\/Learning\/LearningTransportMessagePump.cs:line 340",
  "NServiceBus.TimeOfFailure": "2023-10-21 18:09:42:549974 Z",
  "NServiceBus.ExceptionInfo.Data.Message type": "Messages.OrderPlaced",
  "NServiceBus.ExceptionInfo.Data.Handler type": "Billing.OrderPlacedHandler",
  "NServiceBus.ExceptionInfo.Data.Handler start time": "2023-10-21 18:09:42:509592 Z",
  "NServiceBus.ExceptionInfo.Data.Handler failure time": "2023-10-21 18:09:42:545383 Z",
  "NServiceBus.ExceptionInfo.Data.Handler canceled": "False",
  "NServiceBus.ExceptionInfo.Data.Message ID": "94f5d55d-6af8-4a12-862e-b0a2012af7a7",
  "NServiceBus.ExceptionInfo.Data.Transport message ID": "5d6aed39-219d-4e7a-af9f-3d647f652cda",
  "NServiceBus.ExceptionInfo.Data.Pipeline canceled": "False"
}